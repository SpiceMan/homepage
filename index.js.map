{"mappings":"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","sources":["src/index.jsx","src/context/tags.jsx","src/context/theme.jsx","src/parts/loading.jsx","src/parts/menu.jsx","src/animation/layout.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nimport \"./index.scss\";\n\nimport TagsContext from \"./context/tags\";\nimport ThemeContext from \"./context/theme\";\n\nimport { Loading } from \"./parts/loading\";\nimport { Menu } from \"./parts/menu\";\nimport { LayoutAnimation } from \"./animation/layout\";\nimport Theme from \"./context/theme\";\n\n\nconst TopPage = () => {\n    return <div className=\"content\">Top Page</div>;\n\n};\n\nconst Content = ({ }) => {\n    return <div className=\"container\">\n        <Routes>\n            <Route path=\"/\" element={<TopPage />} />\n        </Routes>\n    </div>;\n};\n\nconst App = ({ setTags, loading, setLoading }) => {\n    const [animateLayout, setAnimateLayout] = useState(true);\n\n    const tags = useContext(TagsContext);\n\n    if (loading) {\n        return <Loading />;\n    }\n\n    if (animateLayout) {\n        return <LayoutAnimation setAnimateLayout={setAnimateLayout} />\n    }\n\n    return <>\n        <Menu className=\"menu\" />\n        <Content />\n    </>;\n};\n\nconst Wrapper = () => {\n    const [tags, setTags] = useState({ loaded: false });\n    const [theme, setTheme] = useState(null);\n    const [language, setLanguage] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    const toggleTheme = () => {\n        let new_theme = document.querySelector(\"body\").classList.contains(\"dark-theme\") ? \"light-theme\" : \"dark-theme\";\n        let old_theme = (new_theme === \"dark-theme\") ? \"light-theme\" : \"dark-theme\";\n\n        const body = document.querySelector(\"body\");\n        body.classList.replace(old_theme, new_theme);\n\n        setTheme(new_theme);\n    };\n\n    useEffect( () => {\n        let theme = localStorage.getItem(\"user.theme\") || \"dark-theme\";\n\n        setTheme(theme);\n    }, []);\n\n    useEffect(() => {\n        let lang = localStorage.getItem(\"user.language\") || \"ja\";\n\n        if (lang !== localStorage.getItem(\"user.language\")) {\n            if (/^en/.test(navigator.language)) {\n                lang = \"en\";\n            }\n            else if (/^ja/.test(navigator.language)) {\n                lang = \"ja\";\n            }\n\n            setLanguage(lang);\n            localStorage.setItem(\"user.language\", lang);\n        }\n        setLanguage(lang);\n    }, []);\n\n    useEffect(() => {\n        if (language && !tags.loaded) {\n            (async () => {\n                const res = await fetch(`/tags.${language}.json`);\n                const json = await res.json();\n                tags[language] = json;\n                tags.loaded = true;\n\n                setTags(tags[language]);\n                setTimeout(() => {\n                    setLoading(false);\n                }, 1000);\n            })();\n        }\n\n    }, [language]);\n\n\n    return <TagsContext.Provider value={tags}><ThemeContext.Provider value={{ theme: theme, toggleTheme: toggleTheme }}>\n        <App setTags={setTags} loading={loading} setLoading={setLoading} />\n    </ThemeContext.Provider></TagsContext.Provider>;\n};\n\nconst root = createRoot(document.getElementById(\"root\"));\nroot.render(<React.StrictMode><Router>\n    <Wrapper />\n</Router></React.StrictMode>);","import { createContext } from \"react\";\n\nexport default tagContext = createContext(null);","import { createContext } from \"react\";\n\nexport default ThemeContext = createContext(null);","import { useState, useContext } from \"react\";\nimport ReactAnime from \"react-animejs\";\nconst { Anime, stagger } = ReactAnime;\n\nimport TagsContext from \"../context/tags\";\n\nexport const Loading = () => {\n    const tags = useContext(TagsContext);\n    return <Anime\n        initial={[\n            {\n                targets: \".loading\",\n                scale: 1.1,\n                duration: 400,\n                direction: \"alternate\",\n                loop: true,\n                easing: \"easeInOutQuad\"\n            }\n        ]}\n    >\n        <div className=\"middlecenter-container\">\n            <div className=\"loading\">{tags.loading}</div>\n        </div>\n    </Anime>;\n};","import { useContext } from \"react\";\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\n\nimport TagsContext from \"../context/tags\";\nimport ThemeContext from \"../context/theme\";\n\nexport const Menu = ({ }) => {\n    const tags = useContext(TagsContext);\n    const themeContext = useContext(ThemeContext);\n\n    return (\n        <Navbar expand=\"lg\">\n            <Container>\n                <Navbar.Brand as={Link} to=\"/\">{tags.questy}</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"me-auto\">\n                        <Nav.Link as={Link} to=\"/\">{tags[\"top-page\"]}</Nav.Link>\n                        <NavDropdown title={tags.settings} id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item onClick={() => themeContext.toggleTheme()}>\n                                {tags[\"toggle-theme\"]}\n                            </NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    );\n};","import { useContext } from \"react\";\nimport ReactAnime from \"react-animejs\";\nconst { Anime } = ReactAnime;\n\nimport ThemeContext from \"../context/theme\";\n\nexport const LayoutAnimation = ({ setAnimateLayout }) => {\n    const themeContext = useContext(ThemeContext);\n\n    return <Anime\n        initial={\n            [\n                { targets: \".content-animation\", scale: [0, 1.5], opacity: 1, duration: 50, easing: \"easeInOutSine\" },\n                { \n                    targets: \".content-animation\",\n                    scale: 1,\n                    opacity: 1,\n                    borderRadius: 0,\n                    top: \"56px\",\n                    height: \"100%\",\n                    width: \"100%\",\n                    backgroundColor: \"#071b21\",\n                    duration: 150,\n                    easing: \"easeInOutSine\",\n                    complete: () => { setAnimateLayout(false)}\n                },\n            ]\n        }>\n        <div className=\"middlecenter-container\">\n            <div className=\"content-animation\"></div>\n        </div>\n    </Anime>\n};"],"names":[],"version":3,"file":"index.js.map"}